#!/bin/bash

#####################################
#                                   #
#  @author      : 00xWolf           #
#    GitHub    : @mmsaeed509       #
#    Developer : Mahmoud Mohamed   #
#  﫥  Copyright : Exodia OS         #
#                                   #
#####################################

## ------------ COLORS ------------ ##

# Reset #
RESET_COLOR='\033[0m' # Text Reset

# Regular Colors #
Black='\033[0;30m'  Red='\033[0;31m'     Green='\033[0;32m'  Yellow='\033[0;33m'
Blue='\033[0;34m'   Purple='\033[0;35m'  Cyan='\033[0;36m'   White='\033[0;37m'

# Bold #
BBlack='\033[1;30m' BRed='\033[1;31m'    BGreen='\033[1;32m' BYellow='\033[1;33m'
BBlue='\033[1;34m'  BPurple='\033[1;35m' BCyan='\033[1;36m'  BWhite='\033[1;37m'

# Underline #
UBlack='\033[4;30m' URed='\033[4;31m'    UGreen='\033[4;32m' UYellow='\033[4;33m'
UBlue='\033[4;34m'  UPurple='\033[4;35m' UCyan='\033[4;36m'  UWhite='\033[4;37m'

# Background #
On_Black='\033[40m' On_Red='\033[41m'    On_Green='\033[42m' On_Yellow='\033[43m'
On_Blue='\033[44m'  On_Purple='\033[45m' On_Cyan='\033[46m'  On_White='\033[47m'

## ------------ GET USER INFO ------------ ##

USER=`echo ${SUDO_USER:-$(whoami)}`
GID=`echo ${SUDO_GID}`
GROUB=`cat /etc/group | grep ${GID} | cut -d: -f1 | head -1`
CONFIG_DIR="/home/${USER}/.config"
BACKUP_DIR="/home/${USER}/.config/exodia-backups"
CONFIG_DIR_SKEL='/etc/skel/.config'
PKG_NAME='exodia-bspwm'
FILES_NAME='bspwm'

# Get user config #
AUTO_UPDATE_STATUS=$(grep -Po 'auto-update\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
RESTORE_USER_CONFIG_STATUS=$(grep -Po 'restore-user-config\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)

CURRENT_EXODIA_THEME=$(grep -Po 'exodiaTheme\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_BACKGROUND=$(grep -Po 'background\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_COLOR_SCHEME=$(grep -Po 'color-scheme\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_THEME=$(grep -Po 'theme\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_ICONS=$(grep -Po 'icons\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_CURSOR=$(grep -Po 'cursor\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_BAR=$(grep -Po 'polybar\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_BETTERLOCKSCREEN_STATUS=$(grep -Po 'change-betterlockscreen\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)

CURRENT_PICOM=$(grep -Po 'picom\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_KEYBINDING=$(grep -Po 'keybinding\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_MULTI_BAR_MONITORS_STATUS=$(grep -Po 'multi-bar-monitors\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_KEYBOARD_LAYOUTS=$(grep -Po 'keyboard-layouts\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_MONITORS_LAYOUTS=$(grep -Po 'monitors-layouts\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)

CURRENT_BSP_BORDER_WIDTH=$(grep -Po 'bsp-border-width\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_BSP_WINDOW_GAP=$(grep -Po 'bsp-window-gap\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_BSP_SPLIT_RATIO=$(grep -Po 'bsp-split-ratio\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_BSP_BORDERLESS_MONOCLE=$(grep -Po 'bsp-borderless-monocle\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_BSP_GAPLESS_MONOCLE=$(grep -Po 'bsp-gapless-monocle\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_BSP_PADDINGLESS_MONOCLE=$(grep -Po 'bsp-paddingless-monocle\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_BSP_SINGLE_MONOCLE=$(grep -Po 'bsp-single-monocle\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_BSP_FOCUS_FOLLOWS_POINTER=$(grep -Po 'bsp-focus-follows-pointer\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_BSP_PRESEL_FEEDBACK=$(grep -Po 'bsp-presel-feedback\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_ALL_WINDOWS_FLOAT=$(grep -Po 'all-windows-float\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)

CURRENT_RGB_KEYBOARD=$(grep -Po 'RGB-keyboard\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)

CURRENT_GITHUB_USERNAME=$(grep -Po 'github-username\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_GITHUB_ACCESS_TOKEN=$(grep -Po 'github-access-token\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_WEATHER_API_KEY=$(grep -Po 'weather-API\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)
CURRENT_WEATHER_CITY_ID=$(grep -Po 'weather-city-ID\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)

CURRENT_AUTO_START_ASSISTANT_STATUS=$(grep -Po 'exodia-assistant-auto-start\s*=\s*\K.*' ${CONFIG_DIR}/${FILES_NAME}/exodia.conf)

RESTORE_USER_CONFIG () {

	echo -e ${BBlue}"   ==> ${BPurple}restore user config for ${BCyan}exodia.conf ${BPurple}." ${RESET_COLOR}
	
	sed -i "s#exodiaTheme = .*#exodiaTheme = ${CURRENT_EXODIA_THEME}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#background = .*#background = ${CURRENT_BACKGROUND}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#color-scheme = .*#color-scheme = ${CURRENT_COLOR_SCHEME}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#theme = .*#theme = ${CURRENT_THEME}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#icons = .*#icons = ${CURRENT_ICONS}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#cursor = .*#cursor = ${CURRENT_CURSOR}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#polybar = .*#polybar = ${CURRENT_BAR}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#change-betterlockscreen = .*#change-betterlockscreen = ${CURRENT_BETTERLOCKSCREEN_STATUS}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf

	sed -i "s#picom = .*#picom = ${CURRENT_PICOM}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#keybinding = .*#keybinding = ${CURRENT_KEYBINDING}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#multi-bar-monitors = .*#multi-bar-monitors = ${CURRENT_MULTI_BAR_MONITORS_STATUS}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#keyboard-layouts = .*#keyboard-layouts = ${CURRENT_KEYBOARD_LAYOUTS}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#monitors-layouts = .*#monitors-layouts = ${CURRENT_MONITORS_LAYOUTS}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf

	sed -i "s#bsp-border-width = .*#bsp-border-width = ${CURRENT_BSP_BORDER_WIDTH}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#bsp-window-gap = .*#bsp-window-gap = ${CURRENT_BSP_WINDOW_GAP}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#bsp-split-ratio = .*#bsp-split-ratio = ${CURRENT_BSP_SPLIT_RATIO}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#bsp-borderless-monocle = .*#bsp-borderless-monocle = ${CURRENT_BSP_BORDERLESS_MONOCLE}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#bsp-gapless-monocle = .*#bsp-gapless-monocle = ${CURRENT_BSP_GAPLESS_MONOCLE}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#bsp-paddingless-monocle = .*#bsp-paddingless-monocle = ${CURRENT_BSP_PADDINGLESS_MONOCLE}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#bsp-single-monocle = .*#bsp-single-monocle = ${CURRENT_BSP_SINGLE_MONOCLE}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#bsp-focus-follows-pointer = .*#bsp-focus-follows-pointer = ${CURRENT_BSP_FOCUS_FOLLOWS_POINTER}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#bsp-presel-feedback = .*#bsp-presel-feedback = ${CURRENT_BSP_PRESEL_FEEDBACK}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#all-windows-float = .*#all-windows-float = ${CURRENT_ALL_WINDOWS_FLOAT}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf

	sed -i "s#RGB-keyboard = .*#RGB-keyboard = ${CURRENT_RGB_KEYBOARD}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf

	sed -i "s#github-username = .*#github-username = ${CURRENT_GITHUB_USERNAME}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#github-access-token = .*#github-access-token = ${CURRENT_GITHUB_ACCESS_TOKEN}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#weather-API = .*#weather-API = ${CURRENT_WEATHER_API_KEY}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf
	sed -i "s#weather-city-ID = .*#weather-city-ID = ${CURRENT_WEATHER_CITY_ID}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf

	sed -i "s#exodia-assistant-auto-start = .*#exodia-assistant-auto-start = ${CURRENT_AUTO_START_ASSISTANT_STATUS}#" ${CONFIG_DIR}/${FILES_NAME}/exodia.conf

}

# BACKUP FUNCTION #
BACKUP (){

	echo -e ${Green}"\n[*] Creating a backup of your current ${BCyan}${PKG_NAME}${Green} files..." ${RESET_COLOR}
	BACKUP_NAME=`date +%m-%d`
	BACKUP_RANDOM="`echo $RANDOM`"
	echo -e ${BBlue}"   ==> creating backup directory." ${RESET_COLOR}

	mkdir -p ${BACKUP_DIR}/${FILES_NAME}-${BACKUP_NAME}-${BACKUP_RANDOM}

	echo -e ${BBlue}"   ==> moving ${BPurple}${FILES_NAME} ${BBlue}config to the ${BPurple}backup ${BBlue}directory." ${RESET_COLOR}
	mv ${CONFIG_DIR}/${FILES_NAME} ${BACKUP_DIR}/${FILES_NAME}-${BACKUP_NAME}-${BACKUP_RANDOM}
    
   
    echo -e ${BBlue}"   ==> Granting permissions to the ${BPurple}${USER} ${BBlue}user." ${RESET_COLOR}

	chown -R ${USER}:${GROUB} ${BACKUP_DIR}/${FILES_NAME}-${BACKUP_NAME}-${BACKUP_RANDOM}
	
    echo -e ${Green}"[✔] Your current config files are stored in : ${BCyan}${BACKUP_DIR}/${FILES_NAME}-${BACKUP_NAME}-${BACKUP_RANDOM} ${Green}." ${RESET_COLOR}

}

# INSTALL FUNCTION #
INSTALL (){

	echo -e ${Green}"\n[*] Installing ${BCyan}${PKG_NAME}${Green} files." ${RESET_COLOR}

	# install config files #
	echo -e ${Green}"\n[+] Installing ${BCyan}${PKG_NAME}${Green} config files into ${BCyan}${CONFIG_DIR}" ${RESET_COLOR}

	echo -e ${BBlue}"   ==> creating config directory." ${RESET_COLOR}
	mkdir -p ${CONFIG_DIR}

	echo -e ${BBlue}"   ==> copying ${BPurple}${FILES_NAME} ${BBlue}config files to the ${BPurple}config ${BBlue}directory." ${RESET_COLOR}
	cp -rf ${CONFIG_DIR_SKEL}/${FILES_NAME} ${CONFIG_DIR}

	echo -e ${BBlue}"   ==> ${BRed}disable ${BCyan}exodia-welcome ${BBlue}and ${BYellow}enable ${BCyan}exodia-assistant${BBlue}." ${RESET_COLOR}
	sed -i 's/exodia-welcome/exodia-assistant/g' ${CONFIG_DIR}/${FILES_NAME}/bspwmrc

	if [[ -f "${CONFIG_DIR}/${FILES_NAME}/exodia.conf" && ${RESTORE_USER_CONFIG_STATUS} == "true" ]]
			
			then

				RESTORE_USER_CONFIG

	fi

    echo -e ${BBlue}"   ==> Granting permissions to the ${BPurple}${USER} ${BBlue}user." ${RESET_COLOR}
	chown -R ${USER}:${GROUB} ${CONFIG_DIR}/${FILES_NAME}    

	
	if [[ -d "${CONFIG_DIR}/${FILES_NAME}" ]];
		
		then

			echo -e ${BGreen}"[✔] Configuration files installed successfully!\n" ${RESET_COLOR}

	else

		echo -e ${BRed}"[✘] Failed to install configuration files!\n" ${RESET_COLOR}

	fi

	echo -e ${Green}"\n[+] Reloading ${BCyan}bspwm${Green} Configurations." ${RESET_COLOR}
	bspc wm --restart

}

# MAIN FUNCTION #
RUN_MAIN (){

	if [[ "${GROUB}" == 'liveuser' ]]; 
		
		then

			exit

	else

		if [[ ! -d "${CONFIG_DIR}/${FILES_NAME}" ]];
			
			then
				
				INSTALL

		elif [[ ! -f "${CONFIG_DIR}/${FILES_NAME}/exodia.conf" ]];
			
			then
				
				BACKUP
				INSTALL
		
		elif [[ -f "${CONFIG_DIR}/${FILES_NAME}/exodia.conf" && ${AUTO_UPDATE_STATUS} == "true" ]]
			
			then
				
				BACKUP
				INSTALL
				
		else

			echo -e ${Green}"\n[*] The New Config Files Located in ${BPurple}${CONFIG_DIR_SKEL}/${FILES_NAME}${Green} directory.\n" ${RESET_COLOR}
				
		fi

	fi

}


post_install() {
	
	RUN_MAIN

}

post_upgrade() {

	RUN_MAIN
		
}


post_remove() {
		
	echo -e ${BRed} "\n[-] Removing config files for ${BCyan}${PKG_NAME}${BRed}... " ${RESET_COLOR}
	echo -e ${BRed} "   ==> ${BPurple}${CONFIG_DIR}/${FILES_NAME} ${BRed} directory." ${RESET_COLOR}
	rm -rf  ${CONFIG_DIR}/${FILES_NAME}

	# D O N E! #
    echo -e "\n${BGreen}[✔] D O N E \n${RESET_COLOR}"

}
